;; Copyright 2020 Google LLC
;;
;; Licensed under the Apache License, Version 2.0 (the "License");
;; you may not use this file except in compliance with the License.
;; You may obtain a copy of the License at
;;
;;  https://www.apache.org/licenses/LICENSE-2.0
;;
;;  Unless required by applicable law or agreed to in writing, software
;;  distributed under the License is distributed on an "AS IS" BASIS,
;;  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;  See the License for the specific language governing permissions and
;;  limitations under the License.

(load "Test.carp")
(load "step.carp")

(use-all Test Step)

(def step (from-array &[1 2 3]))

(deftest test
  (assert-equal test
    &(Maybe.Just 1)
    (Step.value &(from-array &[1 2 3]))
    "from-array initializes a step from an array")
  (assert-equal test
    &(Maybe.Just 2)
    (do (Step.runstep! &step) (Step.value &step))
    "runstep! advances a `Step` in place")
  (assert-equal test
    &(Maybe.Just 2)
    (Step.value &(Step.runstep &(from-array &[1 2 3])))
    "runstep advances a `Step` and returns a new step")
  (assert-equal test
    2
    @(Step.value
      &(Step.map &(fn [x] (match x (Maybe.Just y) (+ 1 y) (Maybe.Nothing) 0))
            &(from-array &[1 2 3])))
    "map maps a function `f` over a step")
)
